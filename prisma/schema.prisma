// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  name         String
  email        String     @unique
  password     String
  bloodType    String
  location     String
  role         UserRole
  availability Boolean    @default(false)
  activeStatus UserStatus @default(ACTIVATE)
  isDeleted    Boolean    @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  userProfile UserProfile?
  request     Request[]

  @@map("users")
}

model Request {
  id                     String        @id @default(uuid())
  donorId                String
  requesterId            String
  phoneNumber            String
  dateOfDonation         String
  hospitalName           String
  hospitalAddress        String
  reason                 String
  requestStatus          requestStatus @default(PENDING)
  alternativePhoneNumber String?
  timeOfDonation         String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  donor User @relation(fields: [donorId], references: [id])

  @@map("requests")
}

model UserProfile {
  id               String   @id @default(uuid())
  userId           String   @unique
  bio              String?
  age              Int
  lastDonationDate String
  gender           Gender?
  hasAllergies     Boolean? @default(false)
  hasDiabetes      Boolean? @default(false)
  height           String?
  weight           String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("userProfiles")
}

enum requestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum UserRole {
USER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
}

enum UserStatus {
  ACTIVATE
  DEACTIVATE
}
